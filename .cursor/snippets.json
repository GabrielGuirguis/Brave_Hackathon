{
  "// Frontend - React & Next.js": {},
  
  "React FC Component": {
    "prefix": "rfc",
    "body": [
      "import React from 'react';",
      "",
      "interface ${1:ComponentName}Props {",
      "  ${2:prop}: ${3:type};",
      "}",
      "",
      "export const ${1:ComponentName}: React.FC<${1:ComponentName}Props> = ({ ${2:prop} }) => {",
      "  return (",
      "    <div>",
      "      $0",
      "    </div>",
      "  );",
      "};",
      ""
    ],
    "description": "React Functional Component with TypeScript"
  },
  "Next.js API Route": {
    "prefix": "napi",
    "body": [
      "import { NextRequest, NextResponse } from 'next/server';",
      "",
      "export async function ${1|GET,POST,PUT,DELETE|}(req: NextRequest) {",
      "  try {",
      "    $0",
      "    return NextResponse.json({ message: 'Success' });",
      "  } catch (error) {",
      "    return NextResponse.json({ error: (error as Error).message }, { status: 500 });",
      "  }",
      "}",
      ""
    ],
    "description": "Next.js API Route Handler"
  },
  "Use Environment Variable": {
    "prefix": "env",
    "body": [
      "const ${1:varName} = process.env.${2:NEXT_PUBLIC_ENV_VAR};",
      ""
    ],
    "description": "Access Next.js environment variable"
  },
  
  "// General Purpose": {},
  
  "Console Log": {
    "prefix": "log",
    "body": [
      "console.log('${1:label}:', ${2:variable});",
      ""
    ],
    "description": "Console log with label"
  },
  
  "Try Catch Block": {
    "prefix": "try",
    "body": [
      "try {",
      "  $0",
      "} catch (error) {",
      "  console.error('Error:', error);",
      "}",
      ""
    ],
    "description": "Try/catch block with error logging"
  }
} 